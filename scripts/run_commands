#!/bin/bash -il

set -exo pipefail

export additional_channel="--add channels defaults"

export miniforge_arch="$(uname -m)"
export miniforge_version="4.14.0-1"
export python_version="3.10"  # should match the one provided in mambaforge
export condapkg="https://github.com/conda-forge/miniforge/releases/download/${miniforge_version}/Mambaforge-${miniforge_version}-Linux-${miniforge_arch}.sh"
if [ "$(uname -m)" = "x86_64" ]; then
   export conda_chksum="d9c8337bda234cf53d2743f32efaab41cbc9d942b8fb52b8588996ef0300c82f"
elif [ "$(uname -m)" = "ppc64le" ]; then
   export conda_chksum="da6cbf1abe89fae4e1246aa64e86e8e155e7938c462f968265266af61fda64cc"
elif [ "$(uname -m)" = "aarch64" ]; then
   export conda_chksum="f721dc44d5aba7a24c6f76408979d125e7ed7f1ba56397ff073a9cfd1611f71c"
else
   exit 1
fi

# give sudo permission for conda user to run yum (user creation is postponed
# to the entrypoint, so we can create a user with the same id as the host)
echo 'conda ALL=NOPASSWD: /usr/bin/yum' >> /etc/sudoers

# Install the latest Miniconda with Python 3 and update everything.
curl -s -L $condapkg > miniconda.sh
sha256sum miniconda.sh | grep $conda_chksum

bash miniconda.sh -b -p /opt/conda
rm -f miniconda.sh

# Work around TLS issues while updating conda's python and retrieving channel notices
export CONDA_NUMBER_CHANNEL_NOTICES="0"
touch /opt/conda/conda-meta/pinned
ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
source /opt/conda/etc/profile.d/conda.sh
conda activate
conda config --set show_channel_urls True
conda config --set channel_priority strict
conda config ${additional_channel} --add channels conda-forge
conda config --show-sources

# Update everything first
mamba update --yes --all

# Ensure conda build, deployment and docker tools ar present
mamba install --yes --quiet \
    "python=$python_version" \
    git \
    patch \
    pip \
    conda-build \
    boa \
    anaconda-client
#    su-exec \
#    tini

# Clean to reduce image size
conda clean -tipy

# Install docker tools
export CONDA_SUEXEC_INFO=( `conda list su-exec | grep su-exec` )
echo "su-exec ${CONDA_SUEXEC_INFO[1]}" >> /opt/conda/conda-meta/pinned
export CONDA_TINI_INFO=( `conda list tini | grep tini` )
echo "tini ${CONDA_TINI_INFO[1]}" >> /opt/conda/conda-meta/pinned

# Lucky group gets permission to write in the conda dir
groupadd -g 32766 lucky
chown -R $USER /opt/conda
chgrp -R lucky /opt/conda && chmod -R g=u /opt/conda
